package net.kadookie.aptusassist.entity;

import jakarta.persistence.*;
import lombok.Data;
import java.time.LocalDate;

/**
 * Entity representing a bookable time slot in the spa system.
 * <p>
 * Persistence Details:
 * <ul>
 * <li>Maps to 'booking' table in H2 database</li>
 * <li>Auto-generated ID as primary key</li>
 * <li>Date and passNo form a natural business key</li>
 * </ul>
 * <p>
 * Synchronization Behavior:
 * <ul>
 * <li>Mirrors external booking system state</li>
 * <li>Status changes trigger external updates</li>
 * <li>Batch updates handled via
 * {@link net.kadookie.aptusassist.SlotDbService.service.DbService}</li>
 * </ul>
 * <p>
 * Constraints:
 * <ul>
 * <li>Date cannot be null</li>
 * <li>passNo must be between 0-7</li>
 * <li>Status must be one of: "free", "own", "booked", or "blocked"</li>
 * </ul>
 */
@Entity
@Data
@Table(name = "slots")
public class Slot {

    /**
     * Unique identifier for the booking record
     * <p>
     * Auto-generated by database sequence
     * </p>
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    /**
     * Date of the booked time slot
     * <p>
     * Format: yyyy-MM-dd
     * </p>
     */
    @Column(name = "date", nullable = false)
    private LocalDate date;
    /**
     * Time slot number (1-7)
     * <p>
     * Maps to specific time periods (see SpaController.PASS_NO_TO_TIME)
     * </p>
     * <p>
     * Special value 0 indicates morning slot (varies by day)
     * </p>
     */
    @Column(name = "pass_no", nullable = false)
    private Integer passNo;
    /**
     * Current booking status
     * <p>
     * Possible values:
     * <ul>
     * <li>"free" - Available for booking</li>
     * <li>"own" - Booked by current user</li>
     * <li>"booked" - Reserved by another user</li>
     * <li>"blocked" - Unavailable for technical reasons</li>
     * </ul>
     */
    @Column(name = "status", nullable = false, length = 50)
    private String status;
}
